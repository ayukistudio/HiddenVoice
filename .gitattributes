Hidden Voice
Hidden Voice is a simple Android voice chat application that allows users to create or join rooms and communicate as either a Speaker or a Listener. The app connects to a Python-based server to relay audio between participants in real-time.
Features

Create or join voice chat rooms with custom names.
Join as a Speaker to send audio or as a Listener to receive audio.
User-friendly interface with call status indicators and icons.
End call functionality with a clear UI.
Server-side support for multiple rooms and proper audio relay.

Screenshots
Main Screen
The main screen allows users to enter a room name or select from a list of existing rooms and join as either a Speaker or Listener.

Speaker Screen
The Speaker screen shows the current room, connection status, and provides an option to end the call.

Listener Screen
The Listener screen displays the room name, connection status, and an option to end the call.

Prerequisites
Client (Android App)

Android device or emulator running Android 5.0 (Lollipop) or higher.
RECORD_AUDIO and INTERNET permissions must be granted (declared in AndroidManifest.xml).

Server

Python 3.6 or higher.
A publicly accessible IP address and port (e.g., 127.0.0.1:5000 in the code).
Port forwarding if running on a local network.

Setup
Server Setup

Clone the repository:git clone https://github.com/ayukistudio/HiddenVoice
cd hidden-voice


Run the server:python server.py


The server will start on the specified HOST and PORT (default: 77.105.161.171:5000).
Ensure the IP and port are accessible and match the values in the Android app.



Android App Setup

Open the project in Android Studio.
Update the Socket connection in SpeakerActivity.java and ListenerActivity.java to use the correct server IP and port if necessary:socket = new Socket("127.0.0.1", 5000);


Build and run the app on an Android device or emulator.
Grant the required permissions (RECORD_AUDIO and INTERNET) when prompted.

Usage

Start the Server:

Run server.py on your server machine.
The server will log connections and room activity.


Launch the App:

Open the Hidden Voice app on your Android device.
On the main screen, enter a room name (e.g., room1) or select an existing room from the dropdown.
Tap "Join as Speaker" to send audio or "Join as Listener" to receive audio.


During a Call:

The Speaker or Listener screen will show the room name and connection status.
Tap "End Call" to disconnect and return to the main screen.



Project Structure

app/src/main/java/com/shadywoof/hiddenvoice/ - Android app source code.
MainActivity.java - Entry point for selecting or creating rooms.
SpeakerActivity.java - Handles audio recording and sending.
ListenerActivity.java - Handles audio playback.


app/src/main/res/layout/ - XML layouts for the app.
activity_main.xml - Main screen layout.
activity_speaker.xml - Speaker screen layout.
activity_listener.xml - Listener screen layout.


server.py - Python server script for handling voice chat connections.
img/ - Directory containing screenshots for the README.

Limitations

The app currently uses a hardcoded list of rooms in the Spinner. Future updates could fetch the list dynamically from the server.
Only one Speaker is allowed per room. Additional Speakers will be rejected by the server.
No mute/unmute functionality (planned for future updates).
No call duration timer (planned for future updates).

Contributing

Fork the repository.
Create a new branch (git checkout -b feature/your-feature).
Make your changes and commit (git commit -m "Add your feature").
Push to your branch (git push origin feature/your-feature).
Open a Pull Request.

License
This project is licensed under the MIT License. See the LICENSE file for details.
Author

@AyukiDev

